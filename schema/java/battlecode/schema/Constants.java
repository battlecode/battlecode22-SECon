// automatically generated by the FlatBuffers compiler, do not modify

package battlecode.schema;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Constants extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static Constants getRootAsConstants(ByteBuffer _bb) { return getRootAsConstants(_bb, new Constants()); }
  public static Constants getRootAsConstants(ByteBuffer _bb, Constants obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Constants __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int increasePeriod() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int uraniumAdditiveIncease() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createConstants(FlatBufferBuilder builder,
      int increasePeriod,
      int uraniumAdditiveIncease) {
    builder.startTable(2);
    Constants.addUraniumAdditiveIncease(builder, uraniumAdditiveIncease);
    Constants.addIncreasePeriod(builder, increasePeriod);
    return Constants.endConstants(builder);
  }

  public static void startConstants(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addIncreasePeriod(FlatBufferBuilder builder, int increasePeriod) { builder.addInt(0, increasePeriod, 0); }
  public static void addUraniumAdditiveIncease(FlatBufferBuilder builder, int uraniumAdditiveIncease) { builder.addInt(1, uraniumAdditiveIncease, 0); }
  public static int endConstants(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Constants get(int j) { return get(new Constants(), j); }
    public Constants get(Constants obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

