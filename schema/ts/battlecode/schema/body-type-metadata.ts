// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { BodyType } from '../../battlecode/schema/body-type';


/**
 * Metadata about all bodies of a particular type.
 */
export class BodyTypeMetadata {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):BodyTypeMetadata {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBodyTypeMetadata(bb:flatbuffers.ByteBuffer, obj?:BodyTypeMetadata):BodyTypeMetadata {
  return (obj || new BodyTypeMetadata()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBodyTypeMetadata(bb:flatbuffers.ByteBuffer, obj?:BodyTypeMetadata):BodyTypeMetadata {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BodyTypeMetadata()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

type():BodyType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : BodyType.ROBOT;
}

deathThreshold():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

healthDecayPercentage():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

actionRadiusSquared():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

bytecodeLimit():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startBodyTypeMetadata(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addType(builder:flatbuffers.Builder, type:BodyType) {
  builder.addFieldInt8(0, type, BodyType.ROBOT);
}

static addDeathThreshold(builder:flatbuffers.Builder, deathThreshold:number) {
  builder.addFieldFloat32(1, deathThreshold, 0.0);
}

static addHealthDecayPercentage(builder:flatbuffers.Builder, healthDecayPercentage:number) {
  builder.addFieldInt32(2, healthDecayPercentage, 0);
}

static addActionRadiusSquared(builder:flatbuffers.Builder, actionRadiusSquared:number) {
  builder.addFieldInt32(3, actionRadiusSquared, 0);
}

static addBytecodeLimit(builder:flatbuffers.Builder, bytecodeLimit:number) {
  builder.addFieldInt32(4, bytecodeLimit, 0);
}

static endBodyTypeMetadata(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBodyTypeMetadata(builder:flatbuffers.Builder, type:BodyType, deathThreshold:number, healthDecayPercentage:number, actionRadiusSquared:number, bytecodeLimit:number):flatbuffers.Offset {
  BodyTypeMetadata.startBodyTypeMetadata(builder);
  BodyTypeMetadata.addType(builder, type);
  BodyTypeMetadata.addDeathThreshold(builder, deathThreshold);
  BodyTypeMetadata.addHealthDecayPercentage(builder, healthDecayPercentage);
  BodyTypeMetadata.addActionRadiusSquared(builder, actionRadiusSquared);
  BodyTypeMetadata.addBytecodeLimit(builder, bytecodeLimit);
  return BodyTypeMetadata.endBodyTypeMetadata(builder);
}
}
